services:

  ignition:
    container_name: ignition
    hostname: ignition
    image: inductiveautomation/ignition:latest
    restart: always
    ports:
      - "8088:8088"
    volumes:
      - gw-data:/usr/local/bin/ignition/data
    environment:
      - ACCEPT_IGNITION_EULA=Y
      - IGNITION_EDITION=standard
      - TZ=Europe/Amsterdam
    command:
      -n ignition-trial
      -m 4096
      --
      wrapper.java.initmemory=1024
      -Dignition.allowunsignedmodules=true

  postgresql:
    container_name: postgres
    hostname: postgres
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_super_password
    volumes:
      - pg-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_super_password
    volumes:
      - pgadmin-data:/var/lib/pgadmin


  monitoring:
    image: nicolargo/glances:latest
    container_name: glances    
    restart: always
    pid: host
    ports:
      - "61208:61208"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Uncomment the below line if you want glances to display host OS detail instead of container's
      # - /etc/os-release:/etc/os-release:ro
    environment:
      - "GLANCES_OPT=-w"

  hivemq:
    image: hivemq/hivemq4:latest
    container_name: hivemq4
    ports:
      - "1883:1883"  # MQTT port
      - "8000:8000"  # WebSocket port
      - "8080:8080"  # HiveMQ Control Center UI
    environment:
      - HIVEMQ_LOG_LEVEL=INFO  # Optional, change log level if needed
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000  # File descriptor limits
    volumes:
      - hivemq-data:/opt/hivemq/data
      - hivemq-log:/opt/hivemq/log
      - hivemq-extensions:/opt/hivemq/extensions

  emqx1:
    image: emqx/emqx:latest
    container_name: emqx1
    restart: unless-stopped    
    environment:
      - EMQX_NAME=emqx1
    ports:
      - "1884:1883"      # MQTT
      - "18083:18083"    # Dashboard
      - "8083:8083"      # WebSocket
      # - "8883:8883"      # TLS      
    networks:
      - ETL-network      
    volumes:
      - emqx1-data:/opt/emqx/data
      - emqx1-log:/opt/emqx/log

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped    
    environment:
      - TZ=Europe/Amsterdam
    ports:
      - "1880:1880"
    volumes:
      - nodered-data:/data



volumes:
  gw-data:
  pg-data:
  pgadmin-data:
  hivemq-data:
  hivemq-log:  
  hivemq-extensions:
  grafana-data:
  emqx1-data:
  emqx1-log:
  nodered-data:


networks:
  default:
    name: otnetwork
